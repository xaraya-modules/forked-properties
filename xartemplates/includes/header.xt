<?xml version="1.0" encoding="utf-8"?>
<xar:template xmlns:xar="http://xaraya.com/2004/blocklayout">
    <!-- License: GPL http://www.gnu.org/copyleft/gpl.html -->

    <xar:style scope="property" property="jqaddresspicker" file="jquery.ui.all"/>
    <xar:style scope="property" property="jqaddresspicker" file="demo"/>

    <xar:javascript type="src" src="http://maps.google.com/maps/api/js?sensor=false" position="head"/>

    <!-- jQuery and jQuery UI -->
    <xar:set name="remote_libs">
        xarMod::apiFunc('themes','admin','get_js_libs',array('scope' => 'remote', 'lib' => 'jquery'))
    </xar:set>
    <xar:if condition="!empty($remote_libs)">
        <xar:javascript type="lib" lib="jquery" position="head"/>
    <xar:else/>
        <xar:javascript type="src" src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js" position="head"/>
    </xar:if>
    <xar:set name="remote_libs">
        xarMod::apiFunc('themes','admin','get_js_libs',array('scope' => 'remote', 'lib' => 'jquery-ui'))
    </xar:set>
    <xar:if condition="!empty($remote_libs)">
        <xar:javascript type="lib" lib="jquery-ui" position="head"/>
    <xar:else/>
        <xar:javascript type="src" src="http://code.jquery.com/ui/1.11.4/jquery-ui.min.js" position="head"/>
    </xar:if>

    <xar:javascript filename="jquery.ui.addresspicker.js" scope="property" property="jqaddresspicker" position="head"/>

    <script>
      jQuery(function($){
        var addresspicker = $( "##addresspicker_#$id#" ).addresspicker({
          componentsFilter: 'country:#$country#'
        });
        var addresspickerMap = $( "##addresspicker_map_#$id#" ).addresspicker({
          regionBias: "#$region#",
          language: "#$language#",
          updateCallback: showCallback,
          apikey : "#$api_key#",
          mapOptions: {
            zoom: #$zoom#,
            center: new google.maps.LatLng(#$lat#, #$lng#),
            scrollwheel: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP
          },
          elements: {
            map:      "##map",
            lat:      "##lat_#$id#",
            lng:      "##lng_#$id#",
            street_number: '##street_number_#$id#',
            route: '##route_#$id#',
            locality: '##locality_#$id#',
            sublocality: '##sublocality_#$id#',
            administrative_area_level_3: '##administrative_area_level_3_#$id#',
            administrative_area_level_2: '##administrative_area_level_2_#$id#',
            administrative_area_level_1: '##administrative_area_level_1_#$id#',
            country:  '##country_#$id#',
            postal_code: '##postal_code_#$id#',
            type:    '##type_#$id#'
          }
        });
        var gmarker = addresspickerMap.addresspicker( "marker");
        gmarker.setVisible(true);
        addresspickerMap.addresspicker( "updatePosition");

        $('##reverseGeocode').change(function(){
          $("##addresspicker_map").addresspicker("option", "reverseGeocode", ($(this).val() === 'true'));
        });

        function showCallback(geocodeResult, parsedGeocodeResult){
          $('##callback_result').text(JSON.stringify(parsedGeocodeResult, null, 4));
        }
        // Update zoom field
        var map = $("##addresspicker_map_#$id#").addresspicker("map");
        google.maps.event.addListener(map, 'idle', function(){
          $('##zoom').val(map.getZoom());
        });
      });
    </script>
</xar:template>
